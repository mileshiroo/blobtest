{"version":3,"sources":["BlobField/style.module.scss","BlobField/particles.js","BlobField/convex_hull.js","BlobField/Renderer.js","config.js","BlobField/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","b2BodyDef","liquidfun","b2CircleShape","b2ParticleGroupDef","b2MouseJointDef","b2ParticleSystemDef","b2PolygonShape","b2Vec2","b2_staticBody","b2Rot","b2_springParticle","b2_solidParticleGroup","b2_dynamicBody","b2_kinematicBody","moveBounds","bounds","width","height","scale","bottom","right","left","w","top","h","SetTransform","createBox","world","bd","type","gravityScale","body","CreateBody","shape","vertices","forEach","v","push","CreateFixtureFromShape","ConvexHull","points","this","newPoints","slice","sort","POINT_COMPARATOR","makeHullPresorted","length","upperHull","i","p","q","r","x","y","pop","lowerHull","concat","a","b","getCenterParticles","xSum","ySum","getOuterParticles","gp","makeHull","map","line","pointA","pointB","lengthX","lengthY","Math","sqrt","pow","angle","atan2","controlPoint","current","previous","next","reverse","smoothing","n","o","PI","cos","sin","Renderer","canvasEl","radius","ctx","getContext","groupLocations","fillStyle","fillRect","max","particleSystems","drawParticleSystem","drawBounds","groupIndex","smooth","drawPoints","beginPath","lineWidth","strokeStyle","moveTo","startCP","endCP","bezierCurveTo","lineTo","closePath","fill","stroke","arc","bodies","j","fixtures","transform","GetTransform","drawPolygon","system","particles","GetPositionBuffer","particleGroups","start","GetBufferIndex","end","GetParticleCount","groupParticles","groupCenter","outerParticles","centerPoint","initialPoint","upsertPath","artists","name","b2AABB","b2World","BlobField","window","innerHeight","positionIterations","velocityIterations","gravity","initialScale","innerWidth","particleRadius","animationEl","useRef","wrapperEl","svgEl","useState","setGroupLocations","useEffect","joints","DestroyJoint","DestroyBody","DestroyParticleSystem","resetWorld","gd","groundBody","horz","vert","createBounds","particleSystem","psd","CreateParticleSystem","createParticleSystem","cursor","initialPosition","circle","position","Set","createCursor","md","bodyA","bodyB","maxForce","GetMass","mouseJoint","CreateJoint","SetAwake","renderer","shouldRender","blobSize","console","log","config","_","pgd","flags","groupFlags","color","random","CreateParticleGroup","createBlob","floor","render","Step","requestAnimationFrame","draw","getGroupLocations","addEventListener","evt","coords","offsetX","offsetY","SetTarget","handleMouseMove","className","wrapper","ref","style","id","offset","stopColor","key","artistNameTag","artistName","toUpperCase","App","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.218e82c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"artistName\":\"style_artistName__3ogNK\",\"artistNameTag\":\"style_artistNameTag__3H6f9\",\"blob\":\"style_blob__3628n\",\"cursor\":\"style_cursor__3-G-I\",\"wrapper\":\"style_wrapper__Q5Udv\"};","\r\nconst { \r\n    b2BodyDef,\r\n    b2CircleShape,\r\n    b2MouseJointDef,\r\n    b2ParticleGroupDef,\r\n    b2ParticleSystemDef,\r\n    b2PolygonShape,\r\n    b2Vec2,\r\n    b2Rot,\r\n    b2_staticBody,\r\n    b2_springParticle,\r\n    b2_solidParticleGroup,\r\n    b2_kinematicBody,\r\n    b2_dynamicBody\r\n} = liquidfun;\r\n\r\nfunction createJoint(world, body) {\r\n    const gd = new b2BodyDef();\r\n    const ground = world.CreateBody(gd);\r\n    const jd = new b2MouseJointDef();\r\n    jd.bodyA = ground;\r\n    jd.bodyB = body;\r\n    //jd.maxForce = 200 * body.getMass();\r\n    body.SetAwake(true);\r\n    return world.CreateJoint(jd);\r\n}\r\n\r\nexport function moveBounds({ bounds, width, height, scale }) {\r\n    const { bottom, left, right, top } = bounds;\r\n    const w = width/scale;\r\n    const h = height/scale\r\n    \r\n\r\n    //bottom.SetTarget(new b2Vec2(0, h));\r\n    //right.SetTarget(new b2Vec2(w, 0));\r\n    bottom.SetTransform(new b2Vec2(0, h + 1), 0);\r\n    right.SetTransform(new b2Vec2(w + 1, 0), 0);\r\n\r\n}\r\n\r\nfunction createBox(world, ...vertices) {\r\n    const bd = new b2BodyDef();\r\n    bd.type = b2_staticBody;\r\n    bd.gravityScale = 0;\r\n    const body = world.CreateBody(bd);\r\n    const shape = new b2PolygonShape();\r\n    vertices.forEach((v) => {\r\n        shape.vertices.push(v);\r\n    })\r\n    body.CreateFixtureFromShape(shape, 1000);\r\n    return body;\r\n}\r\n\r\n\r\nexport function createBounds({ world, width=800, height=600, scale=10}) {\r\n    var bd = new b2BodyDef();\r\n    var ground = world.CreateBody(bd);\r\n\r\n    const w = width/scale;\r\n    const h = height/scale\r\n    const max = 10000 / scale;\r\n\r\n    // set boundary box\r\n    // h/v vertices are initially the same and will be translated by #moveBounds\r\n    const horz = [new b2Vec2(0, -1), new b2Vec2(max, -1), new b2Vec2(max, 0), new b2Vec2(0, 0)];\r\n    const top = createBox(world, ...horz);\r\n    const bottom = createBox(world, ...horz);\r\n    \r\n    const vert = [new b2Vec2(-1, -1), new b2Vec2(-1, max), new b2Vec2(0, max), new b2Vec2(0, -1)];\r\n    const left = createBox(world, ...vert);\r\n    const right = createBox(world, ...vert);\r\n     \r\n    return { \r\n        bottom,\r\n        left,\r\n        right,\r\n        top\r\n     };\r\n}\r\n\r\nexport function createParticleSystem(world, radius = 0.3) {\r\n    const psd = new b2ParticleSystemDef();\r\n    psd.radius = radius;\r\n    return world.CreateParticleSystem(psd);\r\n};\r\n\r\nexport function createBlob({ particleSystem, radius = 3, x, y, width, scale = 10 }) {\r\n    const circle = new b2CircleShape();\r\n    circle.position.Set(radius + x / scale, radius + y / scale);\r\n    circle.radius = radius;\r\n    const pgd = new b2ParticleGroupDef();\r\n    pgd.flags = b2_springParticle;\r\n    pgd.groupFlags = b2_solidParticleGroup;\r\n    pgd.shape = circle;\r\n    pgd.color.Set(Math.random()*255, Math.random()*255, Math.random()*255, 255);\r\n    particleSystem.CreateParticleGroup(pgd);\r\n}\r\n\r\nexport function createCursor(world, { initialPosition = [1, 1], radius = 1 } = {}) {\r\n    const bd = new b2BodyDef();\r\n    const circle = new b2CircleShape();\r\n    bd.type = b2_dynamicBody;\r\n    bd.gravityScale = 0;\r\n    const body = world.CreateBody(bd);\r\n    circle.position.Set(...initialPosition);\r\n    circle.radius = radius;\r\n    body.CreateFixtureFromShape(circle, 3);\r\n    return body;\r\n}","/* \r\n * Convex hull algorithm - Library (JavaScript)\r\n * \r\n * Copyright (c) 2018 Project Nayuki\r\n * https://www.nayuki.io/page/convex-hull-algorithm\r\n * \r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with this program (see COPYING.txt and COPYING.LESSER.txt).\r\n * If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n\r\n\r\nexport default class ConvexHull {\r\n\r\n    constructor(points) {\r\n        this.points = points;\r\n    }\r\n\t\r\n\t// Returns a new array of points representing the convex hull of\r\n\t// the given set of points. The convex hull excludes collinear points.\r\n\t// This algorithm runs in O(n log n) time.\r\n\tmakeHull() {\r\n\t\tvar newPoints = this.points.slice();\r\n\t\tnewPoints.sort(this.POINT_COMPARATOR);\r\n\t\treturn this.makeHullPresorted(newPoints);\r\n\t};\r\n\t\r\n\t\r\n\t// Returns the convex hull, assuming that each points[i] <= points[i + 1]. Runs in O(n) time.\r\n\tmakeHullPresorted(points) {\r\n\t\tif (points.length <= 1)\r\n\t\t\treturn points.slice();\r\n\t\t\r\n\t\t// Andrew's monotone chain algorithm. Positive y coordinates correspond to \"up\"\r\n\t\t// as per the mathematical convention, instead of \"down\" as per the computer\r\n\t\t// graphics convention. This doesn't affect the correctness of the result.\r\n\t\t\r\n\t\tvar upperHull = [];\r\n\t\tfor (var i = 0; i < points.length; i++) {\r\n\t\t\tvar p = points[i];\r\n\t\t\twhile (upperHull.length >= 2) {\r\n\t\t\t\tvar q = upperHull[upperHull.length - 1];\r\n\t\t\t\tvar r = upperHull[upperHull.length - 2];\r\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\r\n\t\t\t\t\tupperHull.pop();\r\n\t\t\t\telse\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tupperHull.push(p);\r\n\t\t}\r\n\t\tupperHull.pop();\r\n\t\t\r\n\t\tvar lowerHull = [];\r\n\t\tfor (var i = points.length - 1; i >= 0; i--) {\r\n\t\t\tvar p = points[i];\r\n\t\t\twhile (lowerHull.length >= 2) {\r\n\t\t\t\tvar q = lowerHull[lowerHull.length - 1];\r\n\t\t\t\tvar r = lowerHull[lowerHull.length - 2];\r\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\r\n\t\t\t\t\tlowerHull.pop();\r\n\t\t\t\telse\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tlowerHull.push(p);\r\n\t\t}\r\n\t\tlowerHull.pop();\r\n\t\t\r\n\t\tif (upperHull.length == 1 && lowerHull.length == 1 && upperHull[0].x == lowerHull[0].x && upperHull[0].y == lowerHull[0].y)\r\n\t\t\treturn upperHull;\r\n\t\telse\r\n\t\t\treturn upperHull.concat(lowerHull);\r\n\t};\r\n\t\r\n\t\r\n\tPOINT_COMPARATOR(a, b) {\r\n\t\tif (a.x < b.x)\r\n\t\t\treturn -1;\r\n\t\telse if (a.x > b.x)\r\n\t\t\treturn +1;\r\n\t\telse if (a.y < b.y)\r\n\t\t\treturn -1;\r\n\t\telse if (a.y > b.y)\r\n\t\t\treturn +1;\r\n\t\telse\r\n\t\t\treturn 0;\r\n\t};\r\n\t\r\n};","import { blob, cursor as cursorClass } from './style.module.scss';\r\nimport ConvexHull from './convex_hull';\r\nimport paper from 'paper';\r\nconst { b2PolygonShape } = liquidfun;\r\n\r\n\r\nfunction getCenterParticles(p) {\r\n  var xSum = 0;\r\n  var ySum = 0;\r\n\r\n  for(var i = 0; i < p.length; i += 2) {\r\n    xSum += p[i];\r\n    ySum += p[i+1];\r\n  }\r\n\r\n  return [xSum/(p.length/2), ySum/(p.length/2)];\r\n}\r\n\r\nfunction getOuterParticles(gp, scale) {\r\n  /*const outerParticles = [];\r\n  var numOuterParticles = 7;\r\n\r\n  for(var i = 0; i < numOuterParticles; i++) {\r\n    var ang = (i / numOuterParticles) * (Math.PI * 2);\r\n    var x = Math.cos(ang) * radius + center[0];\r\n    var y = Math.sin(ang) * radius + center[1];\r\n\r\n    outerParticles.push(getClosestParticleToPosition(gp, x, y));\r\n  }\r\n\r\n  return outerParticles;*/\r\n\r\n  var points = [];\r\n  var hullPoints = [];\r\n  var hullPoints_size;\r\n  for(var i = 0; i < gp.length - 1; i+= 2) {\r\n    points.push({ x: gp[i] * scale, y: gp[i+1] * scale });\r\n  }\r\n\r\n  const ch = new ConvexHull(points);\r\n  return ch.makeHull().map((p) => [p.x, p.y]);\r\n}\r\n\r\nfunction line(pointA, pointB) {\r\n  const lengthX = pointB[0] - pointA[0]\r\n  const lengthY = pointB[1] - pointA[1]\r\n  return {\r\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\r\n    angle: Math.atan2(lengthY, lengthX)\r\n  }\r\n}\r\n\r\nfunction controlPoint (current, previous, next, reverse, smoothing = 0.05) {\r\n  // When 'current' is the first or last point of the array\r\n  // 'previous' or 'next' don't exist.\r\n  // Replace with 'current'\r\n  const p = previous || current\r\n  const n = next || current\r\n  // Properties of the opposed-line\r\n  const o = line(p, n)\r\n  // If is end-control-point, add PI to the angle to go backward\r\n  const angle = o.angle + (reverse ? Math.PI : 0)\r\n  const length = o.length * smoothing\r\n  // The control point position is relative to the current point\r\n  const x = current[0] + Math.cos(angle) * length\r\n  const y = current[1] + Math.sin(angle) * length\r\n  return [x, y]\r\n}\r\n\r\nexport default class Renderer {\r\n  constructor(world, canvasEl, { radius = .25, scale = 10} = {}) {\r\n      // init large buffer geometry\r\n      this.world = world;\r\n      this.canvasEl = canvasEl;\r\n      this.ctx = canvasEl.getContext('2d');\r\n      this.radius = radius;\r\n      this.groupLocations = []\r\n\r\n      //todo:clean this up\r\n      //this.prevOuterParticles = [[],[],[],[],[],[],[],[],[],[],[]];\r\n      //todo: fix this\r\n      //paper.setup(canvasEl);\r\n\r\n      /*this.blobPaths = [];\r\n      for(var i = 0; i < 11; i++) {\r\n        this.blobPaths.push(new paper.Path({segments: [], strokeColor:'black', closed: true}))\r\n      }*/\r\n  }\r\n\r\n  draw(scale) {\r\n    \r\n    this.ctx.fillStyle = 'rgb(171,202,204)';\r\n    this.ctx.fillRect(0, 0, this.canvasEl.width, this.canvasEl.height);\r\n    \r\n\r\n    // draw particle systems\r\n    for (let i = 0, max = this.world.particleSystems.length; i < max; i++) {\r\n        this.drawParticleSystem(this.world.particleSystems[i], scale);\r\n    }\r\n    this.drawBounds(this.world, scale);\r\n  }\r\n\r\n  getGroupLocations() {\r\n    return this.groupLocations;\r\n  }\r\n\r\n\r\n  upsertPath(points, groupIndex, smooth = true, drawPoints = false) {\r\n    this.ctx.beginPath();\r\n    this.lineWidth = '0.1';\r\n    //this.strokeStyle = 'black';\r\n    this.ctx.strokeStyle='rgb(255,255,255)';\r\n    //this.ctx.fillStyle = 'white';\r\n    \r\n    this.ctx.fillStyle = 'rgb(185,205,210)';\r\n    this.ctx.lineWidth = 0.8;\r\n    this.ctx.moveTo(points[0][0], points[0][1]);\r\n    for(var i = 1; i < points.length; i++) {\r\n      if (smooth) {\r\n        const startCP = controlPoint(points[i - 1], points[i - 2], points[i]);\r\n        const endCP = controlPoint(points[i], points[i - 1],  points[i + 1], true);\r\n        this.ctx.bezierCurveTo(...startCP, ...endCP, ...points[i]);\r\n      } else {\r\n        this.ctx.lineTo(points[i][0], points[i][1]);\r\n      }\r\n    }\r\n    this.ctx.closePath();\r\n    this.ctx.fill();\r\n    this.ctx.stroke();\r\n\r\n\r\n\r\n    if (drawPoints) {\r\n      for(var i = 0; i < points.length; i++) {\r\n        this.ctx.fillStyle='black';\r\n        this.ctx.beginPath();\r\n        this.ctx.arc(points[i][0], points[i][1], 3, 0, Math.PI * 2);\r\n        this.ctx.fill();\r\n      }\r\n    }\r\n  }\r\n\r\n  drawPolygon(vertices, scale) {\r\n    const ctx = this.ctx;\r\n    ctx.fillStyle='black';\r\n    ctx.beginPath();\r\n    ctx.moveTo(vertices[0].x * scale, vertices[0].y * scale);\r\n    for (let i = 1; i < vertices.length; i++) {\r\n      ctx.lineTo(vertices[i].x * scale, vertices[i].y * scale);\r\n    }\r\n    ctx.fill();\r\n  }\r\n\r\n  drawBounds(world, scale) {\r\n    for (let i = 0; i < world.bodies.length; i++) {\r\n      const body = world.bodies[i];\r\n      for (var j = 0; j < body.fixtures.length; j++) {\r\n        if (body.fixtures[j].shape instanceof b2PolygonShape ) {\r\n          const transform = body.GetTransform().p;\r\n          const vertices = body.fixtures[j].shape.vertices.map((v) => ({ x: v.x + transform.x, y: v.y + transform.y }));\r\n          this.drawPolygon(vertices, scale);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  drawParticleSystem(system, scale) {\r\n    const particles = system.GetPositionBuffer();\r\n    const particleGroups = system.particleGroups;\r\n    //need to reset this on each step so React knows to rerender\r\n    this.groupLocations = [];\r\n\r\n    // loop through particle groups\r\n    // calculate center of group\r\n    // get list of outmost particles from center of group\r\n    // draw a line connecting them\r\n\r\n    for(var j = 0; j < particleGroups.length; j++) {\r\n      var bufferIndex = particleGroups[j].GetBufferIndex();\r\n      var numParticles = particleGroups[j].GetParticleCount();\r\n\r\n      // * 2 to account for x and y values in position buffer\r\n      var start = bufferIndex * 2;\r\n      var end = start + numParticles * 2;\r\n      var groupParticles = particles.slice(start, end);\r\n\r\n      var groupCenter = getCenterParticles(groupParticles);\r\n\r\n      var outerParticles = getOuterParticles(groupParticles, scale);\r\n\r\n      this.groupLocations[j] = {\r\n        centerPoint: [groupCenter[0] * scale, groupCenter[1] * scale],\r\n        initialPoint: [groupParticles[0] * scale, groupParticles[1] * scale]\r\n      };\r\n\r\n      //basic temporal smoothing\r\n      /*for(var k = 0; k < outerParticles.length; k++) {\r\n        if(this.prevOuterParticles[j][k] == null) break;\r\n        var deltaX = outerParticles[k][0] - this.prevOuterParticles[j][k][0];\r\n        var deltaY = outerParticles[k][1] - this.prevOuterParticles[j][k][1];\r\n\r\n        outerParticles[k][0] = this.prevOuterParticles[j][k][0] + deltaX* 0.3;\r\n        outerParticles[k][1] = this.prevOuterParticles[j][k][1] + deltaY* 0.3;\r\n      }*/\r\n\r\n      //this.blobPaths[j].segments = outerParticles;\r\n      //this.blobPaths[j].simplify(10);\r\n\r\n\r\n      //this.prevOuterParticles[j] = outerParticles;\r\n      //this.blobPaths[j].smooth({type:'catmull-rom', factor:0.4});\r\n      this.upsertPath(outerParticles, j);\r\n\r\n    }\r\n  }\r\n}\r\n","export default {\r\n    artists: [\r\n        {\r\n            name: 'Zeynep Abes'\r\n        }, {\r\n            name: 'Graham Akins'\r\n        }, {\r\n            name: 'Berfin Ataman'\r\n        }, {\r\n            name: 'Erin Cooney'\r\n        }, {\r\n            name: 'Clara Leivas'\r\n        }, {\r\n            name: 'Ben Lerchin'\r\n        }, {\r\n            name: \"Blaine O'Neill\"\r\n        }, {\r\n            name: 'Miles Peyton'\r\n        }, {\r\n            name: 'Hirad Sab'\r\n        }, {\r\n            name: 'Dalena Tran'\r\n        }, {\r\n            name: 'Leming Z/C'\r\n        }\r\n        \r\n    ]\r\n}","import React, { useRef, useState, useEffect } from 'react';\r\nimport { createParticleSystem, createBlob, createBounds, createCursor, moveBounds } from './particles';\r\nimport Renderer from './Renderer';\r\nimport config from 'src/config';\r\n\r\nimport { artistName, artistNameTag, wrapper } from './style.module.scss';\r\n\r\nconst { b2AABB, b2_dynamicBody, b2BodyDef, b2MouseJointDef, b2Vec2, b2World } = liquidfun;\r\n\r\nclass QueryCallback {\r\n  constructor(point) {\r\n    this.point = point;\r\n    this.fixture = null;\r\n  }\r\n\r\n  ReportFixture(fixture) {\r\n    var body = fixture.body;\r\n    if (body.GetType() === b2_dynamicBody) {\r\n      var inside = fixture.TestPoint(this.point);\r\n      if (inside) {\r\n        this.fixture = fixture;\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction resetWorld(world) {\r\n    if (world !== null) {\r\n        while (world.joints.length > 0) {\r\n          world.DestroyJoint(world.joints[0]);\r\n        }\r\n\r\n        while (world.bodies.length > 0) {\r\n          world.DestroyBody(world.bodies[0]);\r\n        }\r\n\r\n        while (world.particleSystems.length > 0) {\r\n          world.DestroyParticleSystem(world.particleSystems[0]);\r\n        }\r\n      }\r\n}\r\n\r\nconst handleMouseDown = (world, scale, groundBody, mouseJoint) => (evt) => {\r\n  const coords = new b2Vec2(evt.offsetX / scale, evt.offsetY / scale);\r\n  const bb = new b2AABB();\r\n  const affordance = new b2Vec2(0.01, 0.01);\r\n  b2Vec2.Sub(bb.lowerBound, coords, affordance);\r\n  b2Vec2.Add(bb.upperBound, coords, affordance);\r\n\r\n  const queryCallback = new QueryCallback(coords);\r\n  world.QueryAABB(queryCallback, bb);\r\n  console.log(queryCallback);\r\n\r\n  if (queryCallback.fixture) {\r\n    const body = queryCallback.fixture.body;\r\n    var md = new b2MouseJointDef();\r\n    md.bodyA = groundBody;\r\n    md.bodyB = body;\r\n    md.target = coords;\r\n    md.maxForce = 100 * body.GetMass();\r\n    mouseJoint.current = world.CreateJoint(md);\r\n    body.SetAwake(true);\r\n  }\r\n}\r\n\r\nconst handleMouseMove = (world, scale, mouseJoint) => (evt) => {\r\n  if (mouseJoint) {\r\n    const coords = new b2Vec2(evt.offsetX / scale, evt.offsetY / scale);\r\n    mouseJoint.SetTarget(coords);\r\n  }\r\n}\r\n\r\nconst handleMouseUp = (world, mouseJoint) => (evt) => {\r\n  if (mouseJoint) {\r\n    world.DestroyJoint(mouseJoint.current);\r\n    mouseJoint.current = null;\r\n  }\r\n}\r\n\r\nexport default function BlobField({\r\n  height = window.innerHeight,\r\n  positionIterations = 3,\r\n  velocityIterations = 5,\r\n  gravity = 5,\r\n  initialScale = 50,\r\n  width = window.innerWidth,\r\n  particleRadius = 0.25\r\n}) {\r\n    const animationEl = useRef(null);\r\n    const wrapperEl = useRef(null);\r\n    const svgEl = useRef(null);\r\n    const bounds = useRef(null);\r\n    const [groupLocations, setGroupLocations] = useState([]);\r\n    //const getScale = () => Math.sqrt(width * height) / config.artists.length * initialScale / 70;\r\n    const getScale = () => 50;\r\n\r\n    useEffect(() => {\r\n        const world = new b2World(new b2Vec2(0, gravity));\r\n        window.world = world;\r\n        resetWorld(world);\r\n        const gd = new b2BodyDef();\r\n        const groundBody = world.CreateBody(gd);\r\n        const scale = getScale();\r\n\r\n        bounds.current = createBounds({ world, scale, width, height });\r\n        moveBounds({ bounds: bounds.current, width, height, scale });\r\n        const particleSystem = createParticleSystem(world, particleRadius);\r\n\r\n        const cursor = createCursor(world);\r\n        var md = new b2MouseJointDef();\r\n        md.bodyA = groundBody;\r\n        md.bodyB = cursor;\r\n        md.maxForce = 150 * cursor.GetMass();\r\n        const mouseJoint = world.CreateJoint(md);\r\n        cursor.SetAwake(true);\r\n\r\n        const renderer = new Renderer(world, animationEl.current, { scale, radius: particleRadius });\r\n\r\n        let shouldRender = true;\r\n\r\n        var spawnRowLen = 5;\r\n        var spawnColLen = 2\r\n        var col = 0;\r\n\r\n        //Use height and magic number to scale blobs\r\n        var blobSize = height / 350;\r\n        console.log(blobSize);\r\n\r\n        config.artists.forEach((_, i) =>\r\n          createBlob({\r\n            particleSystem,\r\n            x: (((i % spawnRowLen) / spawnRowLen) * (width*.8)),\r\n            y:  (Math.floor(i / spawnRowLen) * (height*.8)/(spawnColLen+1)),\r\n            radius: blobSize,\r\n            width,\r\n            scale\r\n          }));\r\n        const render = () => {\r\n          if (!shouldRender) {\r\n            return;\r\n          }\r\n          world.Step(1.0 / 40.0, velocityIterations, positionIterations);\r\n          requestAnimationFrame(() => {\r\n            renderer.draw(getScale());\r\n            render();\r\n          });\r\n          setGroupLocations(renderer.getGroupLocations());\r\n        };\r\n        render();\r\n\r\n        //El.current.addEventListener('mousedown', handleMouseDown(world, scale, groundBody, mouseJoint));\r\n        wrapperEl.current.addEventListener('mousemove', handleMouseMove(world, getScale(), mouseJoint));\r\n        //window.addEventListener('mouseup', handleMouseUp(world, mouseJoint));\r\n\r\n        return () => { shouldRender = false; }\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      bounds.current && moveBounds({ bounds: bounds.current, width, height, scale: getScale() });\r\n\r\n    }, [width, height]);\r\n\r\n    return (\r\n        <div className={wrapper} ref={wrapperEl} style={{ width, height }}>\r\n          <canvas ref={animationEl} width={width} height={height} />\r\n          <svg ref={svgEl} width={width} height={height}>\r\n            <defs>\r\n              <radialGradient id=\"cursorGradient\">\r\n                <stop offset=\"0%\" stopColor=\"#00ff3399\" />\r\n                <stop offset=\"100%\" stopColor=\"#00ff3300\" />\r\n              </radialGradient>\r\n            </defs>\r\n            {groupLocations.map(({ initialPoint }, i) => (\r\n              <g key={`artist-${i}`}>\r\n                <rect className={artistNameTag} x={initialPoint[0]} y={initialPoint[1]} width={120} height={20}></rect>\r\n                <text className={artistName} x={initialPoint[0]} y={initialPoint[1] + 16} width={120}>\r\n                    {config.artists[i] && config.artists[i].name.toUpperCase()}\r\n                </text>\r\n              </g>\r\n             ))}\r\n          </svg>\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport BlobField from 'src/BlobField';\r\nimport { useEffect } from 'react';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <BlobField />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}